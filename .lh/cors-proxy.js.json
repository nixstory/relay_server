{
    "sourceFile": "cors-proxy.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 53,
            "patches": [
                {
                    "date": 1649995788856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1649997449727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,7 @@\n-var express = require('express'),\n-    request = require('request'),\n-    bodyParser = require('body-parser'),\n-    app = express();\n+const express = require('express');\n+const cors = require('cors');\n+const app = express();\n \n-var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n-console.log('Using limit: ', myLimit);\n+const corsOption = { origin: \"*\" }\n \n-app.use(bodyParser.json({ limit: myLimit }));\n-\n-app.all('*', function (req, res, next) {\n-\n-    // Set CORS headers: allow all origins, methods, and headers: you may want to lock this down in a production environment\n-    res.header(\"Access-Control-Allow-Origin\", \"*\");\n-    res.header(\"Access-Control-Allow-Methods\", \"GET, PUT, PATCH, POST, DELETE\");\n-    res.header(\"Access-Control-Allow-Headers\", req.header('access-control-request-headers'));\n-\n-    if (req.method === 'OPTIONS') {\n-        // CORS Preflight\n-        res.send();\n-    } else {\n-        var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n-        if (!targetURL) {\n-            res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n-            return;\n-        }\n-        request({ url: targetURL + req.url, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n-            function (error, response, body) {\n-                if (error) {\n-                    console.error('error: ' + response.statusCode)\n-                }\n-                //                console.log(body);\n-            }).pipe(res);\n-    }\n-});\n-\n-app.set('port', process.env.PORT || 3000);\n\\ No newline at end of file\n-\n-app.listen(app.get('port'), function () {\n-    console.log('Proxy server listening on port ' + app.get('port'));\n-});\n+app.use(cors(corsOption));\n"
                },
                {
                    "date": 1649997476183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,41 @@\n-const express = require('express');\n-const cors = require('cors');\n-const app = express();\n+var express = require('express'),\n+    request = require('request'),\n+    bodyParser = require('body-parser'),\n+    app = express();\n \n-const corsOption = { origin: \"*\" }\n+var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n+console.log('Using limit: ', myLimit);\n \n-app.use(cors(corsOption));\n+app.use(bodyParser.json({ limit: myLimit }));\n+\n+app.all('*', function (req, res, next) {\n+\n+    // Set CORS headers: allow all origins, methods, and headers: you may want to lock this down in a production environment\n+    res.header(\"Access-Control-Allow-Origin\", \"*\");\n+    res.header(\"Access-Control-Allow-Methods\", \"GET, PUT, PATCH, POST, DELETE\");\n+    res.header(\"Access-Control-Allow-Headers\", req.header('access-control-request-headers'));\n+\n+    if (req.method === 'OPTIONS') {\n+        // CORS Preflight\n+        res.send();\n+    } else {\n+        var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n+        if (!targetURL) {\n+            res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n+            return;\n+        }\n+        request({ url: targetURL + req.url, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n+            function (error, response, body) {\n+                if (error) {\n+                    console.error('error: ' + response.statusCode)\n+                }\n+                //                console.log(body);\n+            }).pipe(res);\n+    }\n+});\n+\n+app.set('port', process.env.PORT || 3000);\n+\n+app.listen(app.get('port'), function () {\n+    console.log('Proxy server listening on port ' + app.get('port'));\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1649997638085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n-        request({ url: targetURL + req.url, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n+        request({ url: targetURL + req.url, method: 'POST', json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n             function (error, response, body) {\n                 if (error) {\n                     console.error('error: ' + response.statusCode)\n                 }\n"
                },
                {
                    "date": 1649997678561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         }\n         request({ url: targetURL + req.url, method: 'POST', json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n             function (error, response, body) {\n                 if (error) {\n-                    console.error('error: ' + response.statusCode)\n+                    console.error('error: ' + error)\n                 }\n                 //                console.log(body);\n             }).pipe(res);\n     }\n"
                },
                {
                    "date": 1649997746828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,10 @@\n     res.header(\"Access-Control-Allow-Origin\", \"*\");\n     res.header(\"Access-Control-Allow-Methods\", \"GET, PUT, PATCH, POST, DELETE\");\n     res.header(\"Access-Control-Allow-Headers\", req.header('access-control-request-headers'));\n \n+    console.log(\"targetURL + req.url : \" + targetURL + req.url);\n+\n     if (req.method === 'OPTIONS') {\n         // CORS Preflight\n         res.send();\n     } else {\n"
                },
                {
                    "date": 1649997778977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,15 +14,16 @@\n     res.header(\"Access-Control-Allow-Origin\", \"*\");\n     res.header(\"Access-Control-Allow-Methods\", \"GET, PUT, PATCH, POST, DELETE\");\n     res.header(\"Access-Control-Allow-Headers\", req.header('access-control-request-headers'));\n \n-    console.log(\"targetURL + req.url : \" + targetURL + req.url);\n-\n     if (req.method === 'OPTIONS') {\n         // CORS Preflight\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n+\n+        console.log(\"targetURL + req.url : \" + targetURL + req.url);\n+\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n"
                },
                {
                    "date": 1649997799984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n-        console.log(\"targetURL + req.url : \" + targetURL + req.url);\n+        console.log(\"targetURL : \" + targetURL);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1649997805308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n-        request({ url: targetURL + req.url, method: 'POST', json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n+        request({ url: targetURL, method: 'POST', json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n             function (error, response, body) {\n                 if (error) {\n                     console.error('error: ' + error)\n                 }\n"
                },
                {
                    "date": 1649997814783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n         // CORS Preflight\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n+        console.log(\"targetURL : \" + targetURL);\n \n         console.log(\"targetURL : \" + targetURL);\n \n         if (!targetURL) {\n"
                },
                {
                    "date": 1649997835684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,12 +19,11 @@\n         // CORS Preflight\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n+        var targetURL = req.header('Content-Type'); // Target-URL ie. https://example.com or http://example.com\n         console.log(\"targetURL : \" + targetURL);\n \n-        console.log(\"targetURL : \" + targetURL);\n-\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n"
                },
                {
                    "date": 1649997869846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,14 @@\n         // CORS Preflight\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n-        var targetURL = req.header('Content-Type'); // Target-URL ie. https://example.com or http://example.com\n+        var contentType = req.header('Content-Type'); // Target-URL ie. https://example.com or http://example.com\n+        var requestMethod = req.method;\n+\n         console.log(\"targetURL : \" + targetURL);\n+        console.log(\"contentType : \" + contentType);\n+        console.log(\"requestMethod : \" + requestMethod);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1649997885764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n-        request({ url: targetURL, method: 'POST', json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n+        request({ url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n             function (error, response, body) {\n                 if (error) {\n                     console.error('error: ' + error)\n                 }\n"
                },
                {
                    "date": 1649997901671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,13 +20,13 @@\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n         var contentType = req.header('Content-Type'); // Target-URL ie. https://example.com or http://example.com\n-        var requestMethod = req.method;\n \n         console.log(\"targetURL : \" + targetURL);\n         console.log(\"contentType : \" + contentType);\n-        console.log(\"requestMethod : \" + requestMethod);\n+        console.log(\"req.method : \" + req.method);\n+        console.log(\"req.method : \" + req.method);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1649997960713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n \n         console.log(\"targetURL : \" + targetURL);\n         console.log(\"contentType : \" + contentType);\n         console.log(\"req.method : \" + req.method);\n-        console.log(\"req.method : \" + req.method);\n+        console.log(\"req.body.dataHeader : \" + req.body.dataHeader);\n+        console.log(\"eq.body.dataBody : \" + req.body.dataBody);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1649998068609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,10 @@\n \n         console.log(\"targetURL : \" + targetURL);\n         console.log(\"contentType : \" + contentType);\n         console.log(\"req.method : \" + req.method);\n-        console.log(\"req.body.dataHeader : \" + req.body.dataHeader);\n-        console.log(\"eq.body.dataBody : \" + req.body.dataBody);\n+        console.log(\"req.body.dataHeader : \" + req.body.dataHeader.trxCd);\n+        console.log(\"req.body.dataBody : \" + req.body.dataBody);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1649998140826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,8 @@\n \n         console.log(\"targetURL : \" + targetURL);\n         console.log(\"contentType : \" + contentType);\n         console.log(\"req.method : \" + req.method);\n-        console.log(\"req.body.dataHeader : \" + req.body.dataHeader.trxCd);\n-        console.log(\"req.body.dataBody : \" + req.body.dataBody);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1649998253668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n-var express = require('express'),\n-    request = require('request'),\n-    bodyParser = require('body-parser'),\n-    app = express();\n+const express = require('express');\n+const request = require('request');\n+const bodyParser = require('body-parser');\n+const cors = require('cors');\n \n+app = express();\n+\n var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n console.log('Using limit: ', myLimit);\n \n app.use(bodyParser.json({ limit: myLimit }));\n"
                },
                {
                    "date": 1649998296253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,14 @@\n const request = require('request');\n const bodyParser = require('body-parser');\n const cors = require('cors');\n \n-app = express();\n+const app = express();\n+const corsOptions = {\n+    origin: 'devnewapp.shinhan.com'\n+}\n \n+\n var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n console.log('Using limit: ', myLimit);\n \n app.use(bodyParser.json({ limit: myLimit }));\n"
                },
                {
                    "date": 1649998313711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n \n var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n console.log('Using limit: ', myLimit);\n \n-app.use(bodyParser.json({ limit: myLimit }));\n+// app.use(bodyParser.json({ limit: myLimit }));\n+app.use(cors(corsOptions));\n \n app.all('*', function (req, res, next) {\n \n     // Set CORS headers: allow all origins, methods, and headers: you may want to lock this down in a production environment\n"
                },
                {
                    "date": 1649998346575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,13 @@\n-const express = require('express');\n-const request = require('request');\n-const bodyParser = require('body-parser');\n-const cors = require('cors');\n+var express = require('express'),\n+    request = require('request'),\n+    bodyParser = require('body-parser'),\n+    app = express();\n \n-const app = express();\n-const corsOptions = {\n-    origin: 'devnewapp.shinhan.com'\n-}\n-\n-\n var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n console.log('Using limit: ', myLimit);\n \n-// app.use(bodyParser.json({ limit: myLimit }));\n-app.use(cors(corsOptions));\n+app.use(bodyParser.json({ limit: myLimit }));\n \n app.all('*', function (req, res, next) {\n \n     // Set CORS headers: allow all origins, methods, and headers: you may want to lock this down in a production environment\n@@ -31,8 +24,10 @@\n \n         console.log(\"targetURL : \" + targetURL);\n         console.log(\"contentType : \" + contentType);\n         console.log(\"req.method : \" + req.method);\n+        // console.log(\"req.body.dataHeader : \" + req.body.dataHeader.trxCd);\n+        // console.log(\"req.body.dataBody : \" + req.body.dataBody);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1649999448253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,23 +24,27 @@\n \n         console.log(\"targetURL : \" + targetURL);\n         console.log(\"contentType : \" + contentType);\n         console.log(\"req.method : \" + req.method);\n-        // console.log(\"req.body.dataHeader : \" + req.body.dataHeader.trxCd);\n+        console.log(\"req.body.dataHeader : \" + req.body.dataHeader.trxCd);\n         // console.log(\"req.body.dataBody : \" + req.body.dataBody);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n-        request({ url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n-            function (error, response, body) {\n-                if (error) {\n-                    console.error('error: ' + error)\n-                }\n-                //                console.log(body);\n-            }).pipe(res);\n-    }\n+        request({\n+            url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, httpsAgent: new https.Agent({\n+                rejectUnauthorized: false, //허가되지 않은 인증을 reject하지 않겠다! }\n+\n+                출처: https://yeonfamily.tistory.com/18 [Yeons] },\n+                function(error, response, body) {\n+                    if (error) {\n+                        console.error('error: ' + error)\n+                    }\n+                    //                console.log(body);\n+                }).pipe(res);\n+        }\n });\n \n app.set('port', process.env.PORT || 3000);\n \n"
                },
                {
                    "date": 1649999453887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,10 @@\n         request({\n             url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, httpsAgent: new https.Agent({\n                 rejectUnauthorized: false, //허가되지 않은 인증을 reject하지 않겠다! }\n \n-                출처: https://yeonfamily.tistory.com/18 [Yeons] },\n-                function(error, response, body) {\n+            },\n+                function (error, response, body) {\n                     if (error) {\n                         console.error('error: ' + error)\n                     }\n                     //                console.log(body);\n"
                },
                {
                    "date": 1649999463524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,20 +31,16 @@\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n-        request({\n-            url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, httpsAgent: new https.Agent({\n-                rejectUnauthorized: false, //허가되지 않은 인증을 reject하지 않겠다! }\n-\n-            },\n-                function (error, response, body) {\n-                    if (error) {\n-                        console.error('error: ' + error)\n-                    }\n-                    //                console.log(body);\n-                }).pipe(res);\n-        }\n+        request({ url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, },\n+            function (error, response, body) {\n+                if (error) {\n+                    console.error('error: ' + error)\n+                }\n+                //                console.log(body);\n+            }).pipe(res);\n+    }\n });\n \n app.set('port', process.env.PORT || 3000);\n \n"
                },
                {
                    "date": 1649999482656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,16 +31,18 @@\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n-        request({ url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, },\n-            function (error, response, body) {\n-                if (error) {\n-                    console.error('error: ' + error)\n-                }\n-                //                console.log(body);\n-            }).pipe(res);\n-    }\n+        request({\n+            url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, httpsAgent: new https.Agent({\n+                rejectUnauthorized: false, //허가되지 않은 인증을 reject하지 않겠다! }), },\n+                function(error, response, body) {\n+                    if (error) {\n+                        console.error('error: ' + error)\n+                    }\n+                    //                console.log(body);\n+                }).pipe(res);\n+        }\n });\n \n app.set('port', process.env.PORT || 3000);\n \n"
                },
                {
                    "date": 1649999492728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,16 +33,18 @@\n             return;\n         }\n         request({\n             url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, httpsAgent: new https.Agent({\n-                rejectUnauthorized: false, //허가되지 않은 인증을 reject하지 않겠다! }), },\n-                function(error, response, body) {\n-                    if (error) {\n-                        console.error('error: ' + error)\n-                    }\n-                    //                console.log(body);\n-                }).pipe(res);\n-        }\n+                rejectUnauthorized: false,\n+            }),\n+        },\n+            function (error, response, body) {\n+                if (error) {\n+                    console.error('error: ' + error)\n+                }\n+                //                console.log(body);\n+            }).pipe(res);\n+    }\n });\n \n app.set('port', process.env.PORT || 3000);\n \n"
                },
                {
                    "date": 1649999534961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n var express = require('express'),\n     request = require('request'),\n     bodyParser = require('body-parser'),\n-    app = express();\n+    https = require('https')\n+app = express();\n \n var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n console.log('Using limit: ', myLimit);\n \n"
                },
                {
                    "date": 1649999596853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n var express = require('express'),\n     request = require('request'),\n     bodyParser = require('body-parser'),\n-    https = require('https')\n-app = express();\n+    app = express();\n \n var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n console.log('Using limit: ', myLimit);\n \n@@ -32,13 +31,9 @@\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n-        request({\n-            url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, httpsAgent: new https.Agent({\n-                rejectUnauthorized: false,\n-            }),\n-        },\n+        request({ url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, },\n             function (error, response, body) {\n                 if (error) {\n                     console.error('error: ' + error)\n                 }\n"
                },
                {
                    "date": 1649999607769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,10 @@\n     request = require('request'),\n     bodyParser = require('body-parser'),\n     app = express();\n \n+process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n+\n var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n console.log('Using limit: ', myLimit);\n \n app.use(bodyParser.json({ limit: myLimit }));\n"
                },
                {
                    "date": 1650000545778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n \n app.use(bodyParser.json({ limit: myLimit }));\n \n app.all('*', function (req, res, next) {\n-\n     // Set CORS headers: allow all origins, methods, and headers: you may want to lock this down in a production environment\n     res.header(\"Access-Control-Allow-Origin\", \"*\");\n     res.header(\"Access-Control-Allow-Methods\", \"GET, PUT, PATCH, POST, DELETE\");\n     res.header(\"Access-Control-Allow-Headers\", req.header('access-control-request-headers'));\n"
                },
                {
                    "date": 1650002609699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n         var contentType = req.header('Content-Type'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\"targetURL : \" + targetURL);\n         console.log(\"contentType : \" + contentType);\n-        console.log(\"req.method : \" + req.method);\n         console.log(\"req.body.dataHeader : \" + req.body.dataHeader.trxCd);\n         // console.log(\"req.body.dataBody : \" + req.body.dataBody);\n \n         if (!targetURL) {\n"
                },
                {
                    "date": 1650002619491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,9 @@\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n         var contentType = req.header('Content-Type'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\"targetURL : \" + targetURL);\n-        console.log(\"contentType : \" + contentType);\n-        console.log(\"req.body.dataHeader : \" + req.body.dataHeader.trxCd);\n-        // console.log(\"req.body.dataBody : \" + req.body.dataBody);\n+        console.log(\"전문번호 : \" + req.body.dataHeader.trxCd);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1650002643617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n         // CORS Preflight\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n-        var contentType = req.header('Content-Type'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\"targetURL : \" + targetURL);\n         console.log(\"전문번호 : \" + req.body.dataHeader.trxCd);\n \n"
                },
                {
                    "date": 1650002650796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\"targetURL : \" + targetURL);\n-        console.log(\"전문번호 : \" + req.body.dataHeader.trxCd);\n+        console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1650002656358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n-        console.log(\"targetURL : \" + targetURL);\n+        console.log(\">>>>>>>>>> targetURL : \" + targetURL);\n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n"
                },
                {
                    "date": 1650002680757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,11 @@\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n-        console.log(\">>>>>>>>>> targetURL : \" + targetURL);\n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n \n+\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n"
                },
                {
                    "date": 1650002686126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,10 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n+        console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n+        console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n \n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n"
                },
                {
                    "date": 1650002696313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n+        console.log(\">>>>>>>>>> [HEAD] : \" + req.body.dataHeader.trxCd);\n+        console.log(\">>>>>>>>>> [BODY] : \" + req.body.dataHeader.trxCd);\n \n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n"
                },
                {
                    "date": 1650002702713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> [HEAD] : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> [BODY] : \" + req.body.dataHeader.trxCd);\n+        console.log(\">>>>>>>>>> [HEAD] : \" + req.body.dataHeader);\n+        console.log(\">>>>>>>>>> [BODY] : \" + req.body.dataBody);\n \n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n"
                },
                {
                    "date": 1650002736875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> [HEAD] : \" + req.body.dataHeader);\n+        console.log(\">>>>>>>>>> [HEAD] : \" + bodyParser.toString(req.body.dataHeader));\n         console.log(\">>>>>>>>>> [BODY] : \" + req.body.dataBody);\n \n \n         if (!targetURL) {\n"
                },
                {
                    "date": 1650002744540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n         console.log(\">>>>>>>>>> [HEAD] : \" + bodyParser.toString(req.body.dataHeader));\n-        console.log(\">>>>>>>>>> [BODY] : \" + req.body.dataBody);\n+        console.log(\">>>>>>>>>> [BODY] : \" + bodyParser.toString(req.body.dataBody));\n \n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n"
                },
                {
                    "date": 1650002807531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> [HEAD] : \" + bodyParser.toString(req.body.dataHeader));\n-        console.log(\">>>>>>>>>> [BODY] : \" + bodyParser.toString(req.body.dataBody));\n+        console.log(\">>>>>>>>>> [HEAD] : \" + bodyParser.raw(req.body.dataHeader));\n+        console.log(\">>>>>>>>>> [BODY] : \" + bodyParser.raw(req.body.dataBody));\n \n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n"
                },
                {
                    "date": 1650002863646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,12 +22,11 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> [HEAD] : \" + bodyParser.raw(req.body.dataHeader));\n-        console.log(\">>>>>>>>>> [BODY] : \" + bodyParser.raw(req.body.dataBody));\n+        console.log(\">>>>>>>>>> [HEAD] : \" + bodyParser.json(req.body.dataHeader));\n+        // console.log(\">>>>>>>>>> [BODY] : \" + bodyParser.raw(req.body.dataBody));\n \n-\n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n         }\n"
                },
                {
                    "date": 1650002912959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> [HEAD] : \" + bodyParser.json(req.body.dataHeader));\n-        // console.log(\">>>>>>>>>> [BODY] : \" + bodyParser.raw(req.body.dataBody));\n+        console.log(\">>>>>>>>>> [HEAD] : \" + JSON.stringify(req.body.dataHeader));\n+        console.log(\">>>>>>>>>> [BODY] : \" + bodyParser.raw(req.body.dataBody));\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1650002954902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,11 @@\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n-        console.log(\">>>>>>>>>> 전문번호 : \" + req.body.dataHeader.trxCd);\n+        console.log(\">>>>>>>>>> [전문번호] : \" + req.body.dataHeader.trxCd);\n         console.log(\">>>>>>>>>> [HEAD] : \" + JSON.stringify(req.body.dataHeader));\n-        console.log(\">>>>>>>>>> [BODY] : \" + bodyParser.raw(req.body.dataBody));\n+        console.log(\">>>>>>>>>> [BODY] : \" + JSON.stringify(req.body.dataBody));\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1650002962929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> [전문번호] : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> [HEAD] : \" + JSON.stringify(req.body.dataHeader));\n-        console.log(\">>>>>>>>>> [BODY] : \" + JSON.stringify(req.body.dataBody));\n+        console.log(\"[HEAD] : \" + JSON.stringify(req.body.dataHeader));\n+        console.log(\"[BODY] : \" + JSON.stringify(req.body.dataBody));\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1650002983919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> [전문번호] : \" + req.body.dataHeader.trxCd);\n-        console.log(\"[HEAD] : \" + JSON.stringify(req.body.dataHeader));\n-        console.log(\"[BODY] : \" + JSON.stringify(req.body.dataBody));\n+        console.log(\">>>>>>>>>> [HEAD] : \" + JSON.stringify(req.body.dataHeader));\n+        console.log(\">>>>>>>>>> [BODY] : \" + JSON.stringify(req.body.dataBody));\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n"
                },
                {
                    "date": 1650003009172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,11 @@\n         request({ url: targetURL, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') }, },\n             function (error, response, body) {\n                 if (error) {\n                     console.error('error: ' + error)\n+                } else {\n+                    console.log(\">>>>>>>>>> [HEAD] : \" + JSON.stringify(body.dataHeader));\n                 }\n-                //                console.log(body);\n             }).pipe(res);\n     }\n });\n \n"
                },
                {
                    "date": 1650003042545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> [전문번호] : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> [HEAD] : \" + JSON.stringify(req.body.dataHeader));\n-        console.log(\">>>>>>>>>> [BODY] : \" + JSON.stringify(req.body.dataBody));\n+        console.log(\">>>>>>>>>> [REQUEST/HEAD] : \" + JSON.stringify(req.body.dataHeader));\n+        console.log(\">>>>>>>>>> [REQUEST/BODY] : \" + JSON.stringify(req.body.dataBody));\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n@@ -34,9 +34,9 @@\n             function (error, response, body) {\n                 if (error) {\n                     console.error('error: ' + error)\n                 } else {\n-                    console.log(\">>>>>>>>>> [HEAD] : \" + JSON.stringify(body.dataHeader));\n+                    console.log(\">>>>>>>>>> [RESPONSE/HEAD] : \" + JSON.stringify(body.dataHeader));\n                 }\n             }).pipe(res);\n     }\n });\n"
                },
                {
                    "date": 1650003049294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n                 if (error) {\n                     console.error('error: ' + error)\n                 } else {\n                     console.log(\">>>>>>>>>> [RESPONSE/HEAD] : \" + JSON.stringify(body.dataHeader));\n+                    console.log(\">>>>>>>>>> [RESPONSE/BODY] : \" + JSON.stringify(body.dataBody));\n                 }\n             }).pipe(res);\n     }\n });\n"
                },
                {
                    "date": 1650003126676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n             function (error, response, body) {\n                 if (error) {\n                     console.error('error: ' + error)\n                 } else {\n-                    console.log(\">>>>>>>>>> [RESPONSE/HEAD] : \" + JSON.stringify(body.dataHeader));\n+                    console.log(\">>>>>>>>>> [RESPONSE/HEAD] : \" + JSON.stringify(body.dataHeader, null, 4));\n                     console.log(\">>>>>>>>>> [RESPONSE/BODY] : \" + JSON.stringify(body.dataBody));\n                 }\n             }).pipe(res);\n     }\n"
                },
                {
                    "date": 1650003132951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n         console.log(\">>>>>>>>>> [전문번호] : \" + req.body.dataHeader.trxCd);\n-        console.log(\">>>>>>>>>> [REQUEST/HEAD] : \" + JSON.stringify(req.body.dataHeader));\n-        console.log(\">>>>>>>>>> [REQUEST/BODY] : \" + JSON.stringify(req.body.dataBody));\n+        console.log(\">>>>>>>>>> [REQUEST/HEAD] : \" + JSON.stringify(req.body.dataHeader, null, 4));\n+        console.log(\">>>>>>>>>> [REQUEST/BODY] : \" + JSON.stringify(req.body.dataBody, null, 4));\n \n         if (!targetURL) {\n             res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n             return;\n@@ -35,9 +35,9 @@\n                 if (error) {\n                     console.error('error: ' + error)\n                 } else {\n                     console.log(\">>>>>>>>>> [RESPONSE/HEAD] : \" + JSON.stringify(body.dataHeader, null, 4));\n-                    console.log(\">>>>>>>>>> [RESPONSE/BODY] : \" + JSON.stringify(body.dataBody));\n+                    console.log(\">>>>>>>>>> [RESPONSE/BODY] : \" + JSON.stringify(body.dataBody, null, 4));\n                 }\n             }).pipe(res);\n     }\n });\n"
                },
                {
                    "date": 1650003377512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         res.send();\n     } else {\n         var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n \n-        console.log(\">>>>>>>>>> [전문번호] : \" + req.body.dataHeader.trxCd);\n+        console.log(\">>>>>>>>>> [TRXCD] : \" + req.body.dataHeader.trxCd);\n         console.log(\">>>>>>>>>> [REQUEST/HEAD] : \" + JSON.stringify(req.body.dataHeader, null, 4));\n         console.log(\">>>>>>>>>> [REQUEST/BODY] : \" + JSON.stringify(req.body.dataBody, null, 4));\n \n         if (!targetURL) {\n"
                },
                {
                    "date": 1650003414429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n     app = express();\n \n process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n \n-var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n-console.log('Using limit: ', myLimit);\n+// var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\n+// console.log('Using limit: ', myLimit);\n \n app.use(bodyParser.json({ limit: myLimit }));\n \n app.all('*', function (req, res, next) {\n"
                }
            ],
            "date": 1649995788856,
            "name": "Commit-0",
            "content": "var express = require('express'),\n    request = require('request'),\n    bodyParser = require('body-parser'),\n    app = express();\n\nvar myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';\nconsole.log('Using limit: ', myLimit);\n\napp.use(bodyParser.json({ limit: myLimit }));\n\napp.all('*', function (req, res, next) {\n\n    // Set CORS headers: allow all origins, methods, and headers: you may want to lock this down in a production environment\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Methods\", \"GET, PUT, PATCH, POST, DELETE\");\n    res.header(\"Access-Control-Allow-Headers\", req.header('access-control-request-headers'));\n\n    if (req.method === 'OPTIONS') {\n        // CORS Preflight\n        res.send();\n    } else {\n        var targetURL = req.header('Target-URL'); // Target-URL ie. https://example.com or http://example.com\n        if (!targetURL) {\n            res.send(500, { error: 'There is no Target-Endpoint header in the request' });\n            return;\n        }\n        request({ url: targetURL + req.url, method: req.method, json: req.body, headers: { 'Authorization': req.header('Authorization') } },\n            function (error, response, body) {\n                if (error) {\n                    console.error('error: ' + response.statusCode)\n                }\n                //                console.log(body);\n            }).pipe(res);\n    }\n});\n\napp.set('port', process.env.PORT || 3000);\n\napp.listen(app.get('port'), function () {\n    console.log('Proxy server listening on port ' + app.get('port'));\n});"
        }
    ]
}